apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  SPRING_PROFILES_ACTIVE: "kubernetes"
  SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-service:3306/library_management?useSSL=false&allowPublicKeyRetrieval=true"
  SPRING_DATASOURCE_USERNAME: "library_user"
  SERVER_PORT: "8083"

---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
type: Opaque
data:
  SPRING_DATASOURCE_PASSWORD: bGlicmFyeV9wYXNzd29yZA==  

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until nc -z mysql-service 3306; do
            echo "MySQL not ready, waiting..."
            sleep 5
          done
          echo "MySQL is ready!"
      containers:
      - name: backend
        image: library-backend:latest
        imagePullPolicy: Never  
        ports:
        - containerPort: 8083
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: SPRING_DATASOURCE_URL
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: SPRING_DATASOURCE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: SPRING_DATASOURCE_PASSWORD
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: SERVER_PORT
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/test/health
            port: 8083
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/test/health
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
  - port: 8083
    targetPort: 8083
    nodePort: 30083
  type: NodePort